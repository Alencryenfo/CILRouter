# CIL Router 生产环境 Docker Compose 配置
version: '3.8'

services:
  cilrouter:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:8000"  # 生产环境通常映射到80端口
    env_file:
      - .env.prod
    environment:
      # 服务器配置
      - HOST=0.0.0.0
      - PORT=8000
      
      # 当前供应商索引
      - CURRENT_PROVIDER_INDEX=${CURRENT_PROVIDER_INDEX:-0}
      
      # 更短的超时时间（生产环境）
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-30}
      - STREAM_TIMEOUT=${STREAM_TIMEOUT:-60}
      
      # 鉴权配置（生产环境强烈建议启用）
      - AUTH_KEY=${AUTH_KEY}
      
      # 限流配置（生产环境推荐启用）
      - RATE_LIMIT_ENABLED=${RATE_LIMIT_ENABLED:-true}
      - RATE_LIMIT_RPM=${RATE_LIMIT_RPM:-60}
      - RATE_LIMIT_BURST=${RATE_LIMIT_BURST:-5}
      - RATE_LIMIT_TRUST_PROXY=${RATE_LIMIT_TRUST_PROXY:-true}
      
      # 供应商配置（支持多端点负载均衡）
      - PROVIDER_0_BASE_URL=${PROVIDER_0_BASE_URL}
      - PROVIDER_0_API_KEY=${PROVIDER_0_API_KEY}
      
      - PROVIDER_1_BASE_URL=${PROVIDER_1_BASE_URL:-}
      - PROVIDER_1_API_KEY=${PROVIDER_1_API_KEY:-}
      
      - PROVIDER_2_BASE_URL=${PROVIDER_2_BASE_URL:-}
      - PROVIDER_2_API_KEY=${PROVIDER_2_API_KEY:-}
    
    # 挂载配置和日志目录
    volumes:
      - ./config:/app/config:ro
      - cilrouter-logs:/app/logs:rw
    
    # 重启策略
    restart: always
    
    # 健康检查（更频繁的检查）
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    
    # 资源限制（生产环境严格限制）
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    
    # 网络配置
    networks:
      - cilrouter-prod-network
    
    # 日志配置
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # 安全配置
    security_opt:
      - no-new-privileges:true
    read_only: false  # 需要写日志文件
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # 可选：Nginx反向代理（HTTPS终止）
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/ssl/certs:ro
  #   depends_on:
  #     - cilrouter
  #   networks:
  #     - cilrouter-prod-network
  #   restart: always

  # 可选：监控和日志收集
  # watchtower:
  #   image: containrrr/watchtower
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   environment:
  #     - WATCHTOWER_CLEANUP=true
  #     - WATCHTOWER_SCHEDULE=0 0 4 * * *  # 每天凌晨4点检查更新
  #   restart: unless-stopped

networks:
  cilrouter-prod-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  cilrouter-logs:
    driver: local